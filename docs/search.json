[
  {
    "objectID": "Project_1.html",
    "href": "Project_1.html",
    "title": "Project 1: Schizophrenia PANSS Analysis",
    "section": "",
    "text": "This project is an exploratory data analysis of different psychological test scores (mainly being PANSS) from multiple schizophrenia clinical trials, where patients were treated by different investigators under two treatment conditions (risperidone (atypical) vs. haloperidol (typical - our control)).\nThe overall aim has been to explore patterns in symptom change across patients and investigators and to set up the dataset in a way that reflects the true patient–treatment effect.\n\n\n\n\n\n\n\n\n1. Clustering Symptom Profiles &gt; “Can we identify distinct subtypes of schizophrenia based on PANSS symptom scores?” 2. Longitudinal Data comparison &gt; “Can we use our cluster datasets and compare with our longitudinal data?” 3. Control vs Risperidone - Treatment effectiveness &gt; “Can we see a statistically significant difference in various symptom scores comparing our control vs our treatment of interest?”\n\n\n## Methods\n\n\n\n\nK-means & PCA (kmeans(), hclust(), dplyr, factoextra,prcomp() )\nPCA for dimensionality reduction\nBar Plots & Silhouette Plots\n\n\n\n\n\n\n\n\n(from the same Surrogate package)\nPANSS dataset\nSchizo dataset"
  },
  {
    "objectID": "Project_1.html#main-objectives",
    "href": "Project_1.html#main-objectives",
    "title": "Project 1: Schizophrenia PANSS Analysis",
    "section": "",
    "text": "1. Clustering Symptom Profiles &gt; “Can we identify distinct subtypes of schizophrenia based on PANSS symptom scores?” 2. Longitudinal Data comparison &gt; “Can we use our cluster datasets and compare with our longitudinal data?” 3. Control vs Risperidone - Treatment effectiveness &gt; “Can we see a statistically significant difference in various symptom scores comparing our control vs our treatment of interest?”\n\n\n## Methods\n\n\n\n\nK-means & PCA (kmeans(), hclust(), dplyr, factoextra,prcomp() )\nPCA for dimensionality reduction\nBar Plots & Silhouette Plots"
  },
  {
    "objectID": "Project_1.html#data-source",
    "href": "Project_1.html#data-source",
    "title": "Project 1: Schizophrenia PANSS Analysis",
    "section": "",
    "text": "(from the same Surrogate package)\nPANSS dataset\nSchizo dataset"
  },
  {
    "objectID": "PANSS_Analysis/PANSS_Analysis_book.html",
    "href": "PANSS_Analysis/PANSS_Analysis_book.html",
    "title": "Schizophrenia PANSS Analysis",
    "section": "",
    "text": "Installing packages\n\n#install.packages(c(\"tidyverse\", \"cluster\", \"factoextra\", \"NbClust\", \"Rtsne\"))\n\nCalling packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(cluster)\nlibrary(factoextra)\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\nlibrary(NbClust)\nlibrary(Rtsne)\n\nInstalling database from GitHub:\n\n#install.packages(\"devtools\")\n#devtools::install_github(\"florianstijven/Surrogate-development\")\n\nData calling:\n\nlibrary(Surrogate)\ndata(\"PANSS\")\n\nChecking data:\n\nhead(PANSS)\n\n       Pat.ID Treat          Invest Neg Exc Cog Pos Dep Total\n1   FIN-001_1     1 Investigator_32  23   7  12  15  12    80\n2  FIN-001_10    -1 Investigator_32  20  11  14  17  14    90\n3 FIN-001_100    -1 Investigator_22   8  13  24  18  12    89\n4 FIN-001_101    -1 Investigator_22  11   7   5   8   5    42\n5 FIN-001_105     1 Investigator_32  30   6  17  13  13    94\n6 FIN-001_106     1 Investigator_32  24   5  13  13  14    81"
  },
  {
    "objectID": "PANSS_Analysis/PANSS_Analysis_book.html#loading-data-installing-packages",
    "href": "PANSS_Analysis/PANSS_Analysis_book.html#loading-data-installing-packages",
    "title": "Schizophrenia PANSS Analysis",
    "section": "",
    "text": "Installing packages\n\n#install.packages(c(\"tidyverse\", \"cluster\", \"factoextra\", \"NbClust\", \"Rtsne\"))\n\nCalling packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(cluster)\nlibrary(factoextra)\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\nlibrary(NbClust)\nlibrary(Rtsne)\n\nInstalling database from GitHub:\n\n#install.packages(\"devtools\")\n#devtools::install_github(\"florianstijven/Surrogate-development\")\n\nData calling:\n\nlibrary(Surrogate)\ndata(\"PANSS\")\n\nChecking data:\n\nhead(PANSS)\n\n       Pat.ID Treat          Invest Neg Exc Cog Pos Dep Total\n1   FIN-001_1     1 Investigator_32  23   7  12  15  12    80\n2  FIN-001_10    -1 Investigator_32  20  11  14  17  14    90\n3 FIN-001_100    -1 Investigator_22   8  13  24  18  12    89\n4 FIN-001_101    -1 Investigator_22  11   7   5   8   5    42\n5 FIN-001_105     1 Investigator_32  30   6  17  13  13    94\n6 FIN-001_106     1 Investigator_32  24   5  13  13  14    81"
  },
  {
    "objectID": "PANSS_Analysis/PANSS_Analysis_book.html#clustering-data",
    "href": "PANSS_Analysis/PANSS_Analysis_book.html#clustering-data",
    "title": "Schizophrenia PANSS Analysis",
    "section": "2. Clustering Data",
    "text": "2. Clustering Data\nSelecting only symptom variables:\n\npanss_vars &lt;- PANSS %&gt;%\n  select(Neg, Exc, Cog, Pos, Dep, Total)\n\nScaling variables:\n\npanss_scaled &lt;- scale(panss_vars)\n\nDeciding number of clusters:\n\nwe’re using the silhouette method which allows us to measure how similar each patient is to its own cluster compared to others.\n\n\ncolSums(is.na(panss_vars))\n\n  Neg   Exc   Cog   Pos   Dep Total \n    1     1     1     2     2     6 \n\npanss_vars &lt;- na.omit(panss_vars)\n\n\npanss_scaled &lt;- scale(panss_vars)\n\n\nfviz_nbclust(panss_scaled, kmeans, method = \"silhouette\")\n\n\n\n\n\n\n\n\n\nClustering Data - 2 subtypes\nUsing kmeans()\n- setting seed to 123 allows us to get the same results\n- setting clusters to 2 as that is the optimal number\n- setting nstart to 25 to perform 25 times with different starts –&gt; allows stability and reliability\n\nset.seed(123)   # reproducibility\nkm_res &lt;- kmeans(panss_scaled, centers = 2, nstart = 25) \n\nVisualization:\n\nusing fviz_cluster to show 2D scatterplot\n\n\nfviz_cluster(km_res, data = panss_scaled,\n             ellipse.type = \"euclid\", repel = TRUE,\n             ggtheme = theme_minimal())\n\n\n\n\n\n\n\n\nSummary Table:\n\nPANSS_complete &lt;- PANSS[complete.cases(PANSS[, c(\"Neg\",\"Exc\",\"Cog\",\"Pos\",\"Dep\",\"Total\")]), ]\n\nsummary_table &lt;- PANSS_complete %&gt;%\n  mutate(cluster = km_res$cluster) %&gt;%\n  group_by(cluster) %&gt;%\n  summarise(across(c(Neg, Exc, Cog, Pos, Dep, Total), mean, .names = \"mean_{col}\"),\n            n = n())\n\nprint(summary_table)\n\n# A tibble: 2 × 8\n  cluster mean_Neg mean_Exc mean_Cog mean_Pos mean_Dep mean_Total     n\n    &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt;\n1       1     15.0     6.08     10.3     9.67     8.83       60.7  1218\n2       2     22.9    12.2      17.2    18.9     15.0       104.    723\n\n\nChecking it compared to Treatment:\n\ntable(km_res$cluster, PANSS_complete$Treat)\n\n   \n     -1   1\n  1 267 951\n  2 226 497\n\n\n\nDiscussion\nWe could identify that cluster 1 had more patients with lower/mild symptoms and cluster 2 had more severe symptoms. While there were more patients under Risperidone in cluster 1, both still had a good majority so it doesn’t necessarily tell us treatment effectiveness. While we could not categorize specific subtypes, through this cluster we were able to see how many patients were considered more “mild” and how many were considered “severe”.\nBut what if we tried to see if there were just more than two subtypes?\n\n\n\nClustering Data - 3 subtypes\n\nfviz_nbclust(panss_scaled, kmeans, method = \"silhouette\")\n\n\n\n\n\n\n\n\ntrying with 3 subtype hypothesis:\n\nset.seed(123)\nkm_res_subtype &lt;- kmeans(panss_scaled, centers = 3, nstart = 25) \n\n\nfviz_cluster(km_res_subtype, data = panss_scaled,\n             ellipse.type = \"euclid\", repel = TRUE,\n             ggtheme = theme_minimal())\n\n\n\n\n\n\n\n\n\nsummary_table_2 &lt;- PANSS_complete %&gt;%\n  mutate(cluster = km_res_subtype$cluster) %&gt;%\n  group_by(cluster) %&gt;%\n  summarise(across(c(Neg, Exc, Cog, Pos, Dep, Total), mean, .names = \"mean_{col}\"),\n            n = n())\n\nprint(summary_table_2)\n\n# A tibble: 3 × 8\n  cluster mean_Neg mean_Exc mean_Cog mean_Pos mean_Dep mean_Total     n\n    &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt;\n1       1     24.6    14.5     19.4     21.5     16.4       116.    378\n2       2     20.2     8.34    13.7     13.9     11.9        82.5   752\n3       3     12.8     5.52     8.93     8.46     7.97       53.3   811\n\n\n\nDiscussion\nWhen looking at the summary table, we could see that we could look at three different subtypes in terms of severity: cluster 1 being severe, cluster 2 being moderate, and cluster 3 being mild.\nOut of the symptom scores, we saw:\n\nSevere shows negative, positive, excitatory, cognitive are all high\nModerate shows that negative is still relatively high but excitatory and cognitive drops\nMild shows that scores are low accross the board, but negative remains proportionally the largest factor.\n\nThus, we could broadly say that\n\nCluster 1 is our “Globally severe” subtype\nCluster 2 is our “Moderate, negative-dominant” subtype\nCluster 3 is our “Mild residual” subtype.\n\n\n\n\nValidating Clusters\n\n#install.packages(\"dplyr\")\n\n\nlibrary(dplyr)\n\n\npanss_cols &lt;- c(\"Neg\", \"Exc\", \"Cog\", \"Pos\", \"Dep\", \"Total\")\n\n\npanss_data &lt;- PANSS_complete\npanss_data$cluster &lt;- km_res_subtype$cluster\n\n\nX &lt;- scale(panss_data[, panss_cols])\n\n\nUnderstanding silhouette score\nComputing this score allows us to see the silhouette width for each patient, which tells how well each patient fits in its assigned cluster.\nBy using X, our standardized PANSS data, we can compte a distance matrix between all patients based on their PANSS scores. The silhouette width can be considered as follows:\n\ns(i) is close to 1 –&gt; patient is well inside its cluster\ns(i) is close to 0 –&gt; patient is near the boundary\ns(i) is below 0 –&gt; patient may be misclassified\n\n\n# 1. Silhouette score\nsil &lt;- silhouette(as.numeric(panss_data$cluster), dist(X))\nfviz_silhouette(sil)\n\n  cluster size ave.sil.width\n1       1  378          0.19\n2       2  752          0.17\n3       3  811          0.43\n\n\n\n\n\n\n\n\n\nThe below code performs a principal component analysis (PCA) on our X data. The graph can be interpreted as follows:\n\nClusters: points of the same color form a cloud –&gt; represents patients in the same cluster; ellipse size shows how tightly clustered they are\nOverlap: if ellipses overlap, it shows that they are not sharply separated, if they are distinct, they show strong separation\n\n\npca_res &lt;- prcomp(X)\nfviz_pca_ind(pca_res,\n             geom.ind = \"point\",\n             col.ind = as.factor(panss_data$cluster),\n             addEllipses = TRUE,\n             legend.title = \"Cluster\")\n\n\n\n\n\n\n\n\n\n\nDiscussion\nWe can see that there is a more overlap between cluster 1 (severe) and cluster 2 (moderate), which shows that they are harder to separate. This is actually aligns with the continual nature of symptom severity.\nHowever, we can definitely see that cluster 3 (mild) is the “distinct, cleanest” group, which also made clinical sense as it showed that they have low symptom severity across all PANSS domains.\nTherefore, while our three subtypes remain clinically viable, the statistical viability allows us to understand that the moderate overlap should be proceeded with caution when categorizing between moderate vs severe subtypes.\n\n\n\nShiny App\nIn addition to static clustering results, I built a small Shiny app to make the clustering analysis interactive. Instead of only looking at k-means results on PCA dimensions, the app lets you cluster patients directly on their PANSS subscale scores (Negative, Positive, Cognitive, Depressive, etc.) and adjust the number of clusters. This makes it easier to see how different symptom patterns group together and explore the data from different angles.\n\n# app.R\nlibrary(shiny)\n\nset.seed(123)\ndf &lt;- PANSS_complete\n\n# Define UI\nui &lt;- fluidPage(\n  titlePanel(\"PANSS Patient Clustering Dashboard\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # User input: number of clusters\n      sliderInput(\"k\", \"Number of Clusters:\",\n                  min = 2, max = 8, value = 3),\n      \n      # Choose variables for clustering\n      selectInput(\"xvar\", \"X-axis variable:\",\n                  choices = c(\"Neg\",\"Exc\",\"Cog\",\"Pos\",\"Dep\",\"Total\"), selected = \"Neg\"),\n      selectInput(\"yvar\", \"Y-axis variable:\",\n                  choices = c(\"Neg\",\"Exc\",\"Cog\",\"Pos\",\"Dep\",\"Total\"), selected = \"Pos\"),\n       # Filter by treatment\n      selectInput(\"treatment\", \"Filter by Treatment Arm:\",\n                  choices = c(\"All\", \"-1 (Control)\", \"1 (Risperidone)\"), selected = \"All\")\n    ),\n    \n    mainPanel(\n      plotOutput(\"clusterPlot\"),\n      tableOutput(\"clusterSummary\")\n    )\n  )\n)\n\n# Define server logic\nserver &lt;- function(input, output) {\n  \n    # Reactive filtered dataset\n  filteredData &lt;- reactive({\n    if (input$treatment == \"All\") {\n      df\n    } else if (input$treatment == \"-1 (Control)\") {\n      df %&gt;% filter(Treat == -1)\n    } else {\n      df %&gt;% filter(Treat == 1)\n    }\n  })\n  \n  # Perform clustering\n  clusters &lt;- reactive({\n    df_sub &lt;- filteredData()[, c(\"Neg\",\"Exc\",\"Cog\",\"Pos\",\"Dep\",\"Total\")]\n    kmeans(scale(df_sub), centers = input$k, nstart = 25)\n  })\n  \n  # Cluster plot\n  output$clusterPlot &lt;- renderPlot({\n    clust_res &lt;- clusters()\n    plot_df &lt;- filteredData() %&gt;%\n      mutate(Cluster = factor(clust_res$cluster))\n    \n    ggplot(plot_df, aes_string(x = input$xvar, y = input$yvar, color = \"Cluster\")) +\n      geom_point(alpha = 0.6) +\n      theme_minimal() +\n      labs(title = paste(\"K-means Clustering with\", input$k, \"clusters\"),\n           x = input$xvar, y = input$yvar)\n  })\n  \n    # Cluster summary stats\n  output$clusterSummary &lt;- renderTable({\n    clust_res &lt;- clusters()\n    plot_df &lt;- filteredData() %&gt;%\n      mutate(Cluster = factor(clust_res$cluster))\n    \n    plot_df %&gt;%\n      group_by(Cluster) %&gt;%\n      summarise(across(c(Neg, Exc, Cog, Pos, Dep, Total), mean, .names = \"mean_{col}\"))\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "PANSS_Analysis/PANSS_Analysis_book.html#longitudinal-data-comparison---failed",
    "href": "PANSS_Analysis/PANSS_Analysis_book.html#longitudinal-data-comparison---failed",
    "title": "Schizophrenia PANSS Analysis",
    "section": "3. Longitudinal Data comparison - Failed",
    "text": "3. Longitudinal Data comparison - Failed\nAs now we know the clusters, we would like to see if clusters improve differently over time through treatment.\n\nlibrary(Surrogate)\ndata(\"Schizo_PANSS\")\n\n\nhead(Schizo_PANSS)\n\n    Id InvestId Treat Week1 Week2 Week4 Week6 Week8 Week1_bin Week2_bin\n1 1244      139     1   -10   -16   -17   -24   -30         0         0\n2  529      139     1    -7   -18   -22   -29   -30         0         0\n3  294      139     1    -5    -9   -17   -21    NA         0         0\n4  587      139    -1     2    -3   -12    -4    -4         0         0\n5 1340      139     1    15     2    -7   -10   -15         0         0\n6 1698      139    -1     4    -7    -8    -6    -9         0         0\n  Week4_bin Week6_bin Week8_bin\n1         0         1         1\n2         1         1         1\n3         0         0        NA\n4         0         0         0\n5         0         0         0\n6         0         0         0\n\n\nIntegrating cluster assignment to our longitudinal data.\n\nbut first, making copies so it doesn’t disturb our original data:\n\nLong_data &lt;- Schizo_PANSS\nComplete_data &lt;- PANSS_complete\n\n\n# Complete_data: extract numeric part from Pat.ID and Invest\nComplete_data$Pat.Id &lt;- as.character(Complete_data$Pat.ID)\n\n# Extract everything after the last underscore\nComplete_data$Pat.Id &lt;- sub(\".*_\", \"\", Complete_data$Pat.ID)\n\n# Convert to character just to be safe\n#Complete_data$Pat.Id &lt;- as.numeric(Complete_data$Pat.Id)\n\n# Extract digits after \"Investigator_\"\n#Complete_data$InvestId &lt;- sub(\".*Investigator_(\\\\d+).*\", \"\\\\1\", #Complete_data$Invest)\n\n# Convert to character\n##Complete_data$InvestId &lt;- as.numeric(Complete_data$InvestId)\n\n# Long_data: convert to character\n#Long_data$Id &lt;- as.numeric(Long_data$Id)\n#Long_data$InvestId &lt;- as.numeric(Long_data$InvestId)\n\n\n# Convert patient ID in longitudinal data to character\nLong_data$Id &lt;- as.character(Long_data$Id)\n\n# Optionally convert numeric columns for change scores\nweeks &lt;- paste0(\"Week\", c(1,2,4,6,8))\nLong_data[weeks] &lt;- lapply(Long_data[weeks], as.numeric)\n\nmerging:\n\ncluster_df &lt;- data.frame(\n  Pat.Id = Complete_data$Pat.Id,\n  cluster = km_res_subtype$cluster\n)\n\n\nLong_data_merged &lt;- merge(\n  Long_data,\n  cluster_df,\n  by.x = \"Id\",\n  by.y = \"Pat.Id\",\n  all.x = FALSE \n)\n\nAs I realized that the dataset would not merge successfully due to incomparable patient ID and investigator ID even with correct coding, I moved on from this specific dataset but worked with others."
  },
  {
    "objectID": "PANSS_Analysis/PANSS_Analysis_book.html#treatment-vs-control-effect-on-scores",
    "href": "PANSS_Analysis/PANSS_Analysis_book.html#treatment-vs-control-effect-on-scores",
    "title": "Schizophrenia PANSS Analysis",
    "section": "4. Treatment vs Control effect on scores",
    "text": "4. Treatment vs Control effect on scores\nBy using score changes from before and after treatment (control vs Risperidone) we want to identify their effects on continuous outcomes.\n\ndata(\"Schizo\")\n\nWe are now working with not just PANSS scores but also BPRS and CGI scores.\nBPRS (Brief Psychiatric Rating Scale) is a clinician-rated scale that measure psychiatric symptoms, ranging from depression, anxiety, and unusual behavior. It has been widely used in schizphrenia clinical trials to assess treatment effectiveness. There are 18 items in which they are scored from 1 to 7. A higher score means greater psychiatric symptom severity.\n(https://www.psychiatrictimes.com/view/bprs-brief-psychiatric-rating-scale)\nCGI (Clinical Global Impression) scale is also a widely-used clinician-rated measures in psychiatry. It provides a global, overall assessment of a patient’s illness severity and improvement over time. CGI has three main parts, but usually the main two are CGI-Severity (CGI-S) that measures how severe the patient’s illness is at a specific time, and CGI-Improvement (CGI-I) that measures how much the patient has improved or worsened relative to baseline. Like the BPRS, a higher score means greater psychiatric symptom severity or worse improvement. (https://pmc.ncbi.nlm.nih.gov/articles/PMC2880930/)\nUsing a combination of PANSS, BPRS and CGI, we can assess the effectiveness of our treatment of choice (Risperidone) versus our control.\n\nT-test Significance in Change of Scores\nWe performed a Welch two sample t-test to see if the presence of Risperidone created a statistically significant change in the symptom scores of the patients.\n\n# PANSS change: Risperidone vs Control\nt.test(PANSS ~ Treat, data = Schizo)\n\n\n    Welch Two Sample t-test\n\ndata:  PANSS by Treat\nt = 3.8874, df = 921.27, p-value = 0.0001086\nalternative hypothesis: true difference in means between group -1 and group 1 is not equal to 0\n95 percent confidence interval:\n 2.249548 6.836839\nsample estimates:\nmean in group -1  mean in group 1 \n       -11.47191        -16.01510 \n\n# BPRS change\nt.test(BPRS ~ Treat, data = Schizo)\n\n\n    Welch Two Sample t-test\n\ndata:  BPRS by Treat\nt = 3.4087, df = 917.25, p-value = 0.0006813\nalternative hypothesis: true difference in means between group -1 and group 1 is not equal to 0\n95 percent confidence interval:\n 0.9724791 3.6120381\nsample estimates:\nmean in group -1  mean in group 1 \n       -6.646067        -8.938326 \n\n# CGI change\nt.test(CGI ~ Treat, data = Schizo)\n\n\n    Welch Two Sample t-test\n\ndata:  CGI by Treat\nt = 3.1808, df = 879.64, p-value = 0.00152\nalternative hypothesis: true difference in means between group -1 and group 1 is not equal to 0\n95 percent confidence interval:\n 0.09248325 0.39051202\nsample estimates:\nmean in group -1  mean in group 1 \n        3.446529         3.205031 \n\n\n\nDiscussion\nPANSS\n\nThe p-value is around 0.0001, showing high significance.\nThe mean change is higher on Risperidone then on control.\nThe 95% confidence interval does not include 0, which confirms significance.\n\nInterpretation: Risperidone lead to a significantly larger reduction in PANSS scores compared to control.\nBPRS\n\nThe p-value is around 0.0007, showing significance.\nThe mean change is higher on Risperidone then on control.\nThe 95% confidence interval does not include 0, which confirms significance.\n\nInterpretation: Risperidone lead to a significantly larger reduction in BPRS scores compared to control.\nCGI\n\nThe p-value is around 0.0015, showing significance.\nThe mean change is slightly higher on Risperidone then on control.\nThe 95% confidence interval does not include 0, which confirms significance.\n\n\n\nBinary outcomes - Bar Plot visual\nAs there is also PANSS_Bin, BPRS_Bin and CGI_Bin which are binary outcomes, we can compute proportions of patients with clinically meaningful improvement for Risperidone vs control.\n\nSchizo_clean &lt;- Schizo %&gt;%\n  filter(!is.na(Treat) & !is.na(PANSS_Bin) & !is.na(BPRS_Bin) & !is.na(CGI_Bin))\n\n# Compute proportion of improvement by treatment\nbinary_summary &lt;- Schizo_clean %&gt;%\n  group_by(Treat) %&gt;%\n  summarise(\n    PANSS_Prop = mean(PANSS_Bin),\n    BPRS_Prop = mean(BPRS_Bin),\n    CGI_Prop   = mean(CGI_Bin)\n  )\n\nbinary_summary\n\n# A tibble: 2 × 4\n  Treat PANSS_Prop BPRS_Prop CGI_Prop\n  &lt;int&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1    -1      0.381     0.396    0.430\n2     1      0.467     0.490    0.361\n\n\n\nlibrary(tidyr)\n\nbinary_long &lt;- binary_summary %&gt;%\n  pivot_longer(cols = PANSS_Prop:CGI_Prop,\n               names_to = \"Measure\",\n               values_to = \"Proportion\") %&gt;%\n  mutate(Treat = ifelse(Treat == 1, \"Risperidone\", \"Control\"))\n\n\nlibrary(ggplot2)\n\nggplot(binary_long, aes(x = Measure, y = Proportion, fill = Treat)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Proportion of Patients with Clinically Meaningful Improvement\",\n    x = \"Outcome Measure\",\n    y = \"Proportion of Improvement in Patients\",\n    fill = \"Treatment\"\n  ) +\n  theme_minimal(base_size = 12)\n\n\n\n\n\n\n\n\n\nDiscussion\nAs we can observe, BPRS and PANSS has shown more clinically meaningful improvement in their proportions of patients. However interestingly enough, CGI has shown a decrease in the proportion of improvement in patients. After further research:\n\n# Check mean CGI_Bin by treatment\ntable(Schizo_clean$Treat, Schizo_clean$CGI_Bin)\n\n    \n        0    1\n  -1  302  228\n  1  1013  573\n\n# Or proportion\nprop.table(table(Schizo_clean$Treat, Schizo_clean$CGI_Bin), margin = 1)\n\n    \n             0         1\n  -1 0.5698113 0.4301887\n  1  0.6387137 0.3612863\n\n\nWe can see that this could have been caused by the fact that our patient numbers were a lot bigger in our Risperidone sample size versus our control, though a higher number of patients did show improvement. Thus, we can say that Risperidone still has a good improvement scale overall in terms of treatment effectiveness."
  }
]